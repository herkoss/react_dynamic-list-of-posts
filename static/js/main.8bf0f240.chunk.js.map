{"version":3,"sources":["api/api.js","components/PostsList/PostsList.jsx","api/comments.js","components/NewCommentForm/NewCommentForm.jsx","components/PostDetails/PostDetails.jsx","api/posts.js","App.jsx","index.js"],"names":["request","url","options","fetch","then","response","json","data","PostsList","postsFromServer","onSetPost","selectedPostId","className","map","post","key","id","userId","title","type","onClick","getPostComments","postId","a","comments","filter","comment","deleteComment","commentId","method","createComment","headers","body","JSON","stringify","NewCommentForm","getUpdatedComments","useState","nameInput","setNameInput","emailInput","setEmailInput","commentInput","setCommentInput","onSubmit","event","preventDefault","name","email","placeholder","value","onChange","target","PostDetails","postDetails","setPostDetails","postComments","setPostComments","visibleComments","setVisibleComments","useEffect","current","length","App","selectedUser","setSelectedUser","setPostsFromServer","setSelectedPostId","promise","posts","getUserPosts","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8bf0f240.chunk.js","sourcesContent":["export const request = (url, options) => {\n  const BASE_URL = 'https://mate-api.herokuapp.com';\n\n  return fetch(`${BASE_URL}${url}`, options)\n    .then(response => response.json())\n    .then(response => response.data);\n};\n","import React from 'react';\nimport './PostsList.scss';\n\nexport const PostsList = ({ postsFromServer, onSetPost, selectedPostId }) => {\n\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n  \n      <ul className=\"PostsList__list\">\n        {postsFromServer.map(post => (\n          <li\n            className=\"PostsList__item\"\n            key={post.id}\n          >\n            <div>\n              <b>[User #{post.userId}]: </b>\n              {post.title}\n            </div>\n            <button\n              type=\"button\"\n              className=\"PostsList__button button\"\n              onClick={() => {\n                if (selectedPostId === 0) {\n                  return onSetPost(post.id);\n                }\n\n                return onSetPost(0);\n              }}\n            >\n              {selectedPostId === post.id ? 'Close' : 'Open'}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import { request } from './api';\n\nexport const getPostComments = async postId => request('/comments')\n  .then(comments => comments.filter(\n    comment => comment.postId === postId,\n  ));\n\nexport const deleteComment = async commentId => request(\n  `/comments/${commentId}`,\n  {\n    method: 'DELETE',\n  },\n);\n\nexport const createComment = async data => request(\n  `/comments`,\n  {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify(data),\n  },\n);\n","import React, { useState } from 'react';\n\nimport './NewCommentForm.scss';\n\nimport { createComment } from '../../api/comments';\n\nexport const NewCommentForm = ({ selectedPostId, getUpdatedComments }) => {\n  const [nameInput, setNameInput] = useState('');\n  const [emailInput, setEmailInput] = useState('');\n  const [commentInput, setCommentInput] = useState('');\n\n  const clearForm = () => {\n    setNameInput('');\n    setEmailInput('');\n    setCommentInput('');\n  };\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={async event => {\n        event.preventDefault();\n        await createComment({\n          postId: selectedPostId,\n          name: nameInput,\n          email: emailInput,\n          body: commentInput,\n        });\n        clearForm();\n        await getUpdatedComments();\n      }}\n    >\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          value={nameInput}\n          onChange={event => setNameInput(event.target.value)}\n        />\n      </div>\n  \n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          value={emailInput}\n          onChange={event => setEmailInput(event.target.value)}\n        />\n      </div>\n  \n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          value={commentInput}\n          onChange={event => setCommentInput(event.target.value)}\n        />\n      </div>\n  \n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n","import React, { useState, useEffect} from 'react';\n\nimport './PostDetails.scss';\n\nimport { getPostDetails } from '../../api/posts';\nimport { getPostComments, deleteComment } from '../../api/comments';\n\nimport { NewCommentForm } from '../NewCommentForm';\n\nexport const PostDetails = ({ selectedPostId }) => {\n  const [postDetails, setPostDetails] = useState(null);\n  const [postComments, setPostComments] = useState(null)\n  const [visibleComments, setVisibleComments] = useState(true);\n\n  useEffect(() => {\n    getPostDetails(selectedPostId).then(setPostDetails);\n    getPostComments(selectedPostId).then(setPostComments);\n  }, [selectedPostId]);\n\n  const getUpdatedComments = async() => {\n    const comments = await getPostComments(selectedPostId);\n    setPostComments(comments);\n  };\n\n  const toggleComments = () => setVisibleComments(current => !current);\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>{postDetails ? postDetails.title : 'No title'}</h2>\n\n      <section className=\"PostDetails__post\">\n        <p>{postDetails ? postDetails.body : 'No body'}</p>\n      </section>\n\n      <section className=\"PostDetails__comments\">\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={toggleComments}\n        >\n          {visibleComments ? 'Hide ' : 'Show '}\n          {postComments && (postComments.length === 1 ? '1 comment' : `${postComments.length} comments`)}\n        </button>\n\n        {postComments && visibleComments && (\n          <ul className=\"PostDetails__list\">\n            {postComments.map(comment => (\n              <li\n                className=\"PostDetails__list-item\"\n                key={comment.id}\n              >\n                <button\n                  type=\"button\"\n                  className=\"PostDetails__remove-button button\"\n                  onClick={async() => {\n                    await deleteComment(comment.id);\n                    await getUpdatedComments();\n                  }}\n                >\n                  X\n                </button>\n                <p>{comment.body}</p>\n              </li>\n            ))}\n          </ul>\n        )}\n      </section>\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm\n            selectedPostId={selectedPostId}\n            getUpdatedComments={getUpdatedComments}\n          />\n        </div>\n      </section>\n    </div>\n  );\n};\n","import { request } from './api';\n\nexport const getUserPosts = (userId) => {\n  const promise = request('/posts');\n\n  if (userId === 0) {\n    return promise;\n  }\n\n  return promise\n    .then(posts => posts.filter(\n      post => post.userId === userId,\n    ));\n};\n\nexport const getPostDetails = postId => request(`/posts/${postId}`);\n","import React, { useState, useEffect } from 'react';\n\nimport './App.scss';\nimport './styles/general.scss';\n\nimport { getUserPosts } from './api/posts';\n\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\n\nconst App = () => {\n  const [selectedUser, setSelectedUser] = useState(0);\n  const [postsFromServer, setPostsFromServer] = useState([]);\n  const [selectedPostId, setSelectedPostId] = useState(0);\n\n\n  useEffect(() => {\n    getUserPosts(selectedUser).then(setPostsFromServer);\n  }, [selectedUser]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n  \n          <select\n            onChange={event => setSelectedUser(+event.target.value)}\n            className=\"App__user-selector\"\n          >\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n  \n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            postsFromServer={postsFromServer}\n            onSetPost={setSelectedPostId}\n            selectedPostId={selectedPostId}\n          />\n        </div>\n  \n        <div className=\"App__content\">\n          <PostDetails\n            selectedPostId={selectedPostId}\n          />\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}